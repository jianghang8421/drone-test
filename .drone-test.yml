---
kind: pipeline
name: default-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: pre-check
    pull: default
    image: rancher/dapper:v0.4.2
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - apk add git make curl go=1.12.12-r0
      - make -f Makefile.pandaria pre-check
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request
        - tag

  - name: build
    pull: default
    image: rancher/dapper:v0.4.2
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - apk add git make curl go=1.12.12-r0 bzr
      - make -f Makefile.pandaria
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request
        - tag

  - name: stage-binaries
    pull: default
    image: rancher/dapper:v0.4.1
    commands:
      - "cp -r ./bin/* ./package/"
    when:
      event:
        - push
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"
          - "refs/heads/release/*saic*"

  - name: docker-publish-head
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - ARCH=amd64
        - VERSION=v2.3-ent-dev
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile.pandaria
      password:
        from_secret: docker_password
      repo: cnrancher/rancher
      tag: v2.3-ent-dev-linux-amd64
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish-head-agent
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - ARCH=amd64
        - VERSION=v2.3-ent-dev
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile_pandaria.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: v2.3-ent-dev-linux-amd64
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile.pandaria
      password:
        from_secret: docker_password
      repo: cnrancher/rancher
      tag: "${DRONE_TAG}-linux-amd64"
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: docker-publish-agent
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile_pandaria.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: "${DRONE_TAG}-linux-amd64"
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: publish-airgap
    pull: default
    image: rancher/dapper:v0.4.1
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - apk add git make curl
      - make -f Makefile.pandaria publish-airgap
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: github_binary_prerelease
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
      files:
        - "bin/rancher-*"
      prerelease: true
    when:
      event:
        - tag
      ref:
        include:
          - "refs/tags/*rc*"
          - "refs/tags/*alpha*"
        exclude:
          - "refs/tags/*saic*"

  - name: github_binary_release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
      files:
        - "bin/rancher-*"
    when:
      event:
        - tag
      ref:
        include:
          - "refs/tags/v2*"
        exclude:
          - "refs/tags/*rc*"
          - "refs/tags/*alpha*"
          - "refs/tags/*saic*"

  - name: chart-publish
    image: jacie/drone-aliyun-oss
    pull: always
    environment:
      ALIYUN_ACCESS_KEY_ID:
        from_secret: aliyun_access_id
      ALIYUN_SECRET_ACCESS_KEY:
        from_secret: aliyun_access_secret
      PLUGIN_SOURCE: bin/chart
      ALIYUN_BUCKET: oss://pandaria-releases
      ALIYUN_ENDPOINT: http://oss-cn-beijing.aliyuncs.com
      PLUGIN_TARGET: server-charts
      PLUGIN_RECURSIVE: -r
      PLUGIN_ACCESS: public-read
    commands:
      - "aliyun-oss"
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

node:
  instance: agent-amd64

trigger:
  event:
    exclude:
      - promote

---
kind: pipeline
name: default-linux-arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: build
    image: rancher/dapper:v0.4.2
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - apk add git make curl go=1.12.12-r0 bzr
      - make -f Makefile.pandaria
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - push
        - pull_request
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: stage-binaries
    image: rancher/dapper:v0.4.1
    commands:
      - "cp -r ./bin/* ./package/"
    when:
      event:
        - push
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: docker-publish-head
    image: plugins/docker
    settings:
      build_args:
        - ARCH=arm64
        - VERSION=v2.3-ent-dev
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile.pandaria
      tag: v2.3-ent-dev-linux-arm64
      password:
        from_secret: docker_password
      repo: cnrancher/rancher
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish-head-agent
    image: plugins/docker
    settings:
      build_args:
        - ARCH=arm64
        - VERSION=v2.3-ent-dev
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile_pandaria.agent
      tag: v2.3-ent-dev-linux-arm64
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish
    image: plugins/docker
    settings:
      build_args:
        - ARCH=arm64
        - "VERSION=${DRONE_TAG}"
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile.pandaria
      password:
        from_secret: docker_password
      repo: cnrancher/rancher
      tag: "${DRONE_TAG}-linux-arm64"
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: docker-publish-agent
    image: plugins/docker
    settings:
      build_args:
        - ARCH=arm64
        - "VERSION=${DRONE_TAG}"
      context: package/
      custom_dns: 1.1.1.1
      dockerfile: package/Dockerfile_pandaria.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: "${DRONE_TAG}-linux-arm64"
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  ref:
    exclude:
      - "refs/heads/release/*saic*"
      - "refs/tags/*saic*"
  event:
    exclude:
      - promote

node:
  instance: agent-arm64
---
kind: pipeline
name: default-windows-1809

platform:
  os: windows
  arch: amd64
  version: 1809

steps:
  - name: build
    pull: always
    image: maiwj/dapper:windows-1809
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - dapper.exe -f Dockerfile-windows-pandaria.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - push
        - pull_request
        - tag

  - name: stage-binaries
    image: maiwj/dapper:windows-1809
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-dev
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: ${DRONE_BRANCH/release\//}-dev-windows-1809
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: "${DRONE_TAG}-windows-1809"
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote
node:
  instance: agent-windows-1809

---
kind: pipeline
name: default-windows-1903

platform:
  os: windows
  arch: amd64
  version: 1903

steps:
  - name: build
    pull: always
    image: maiwj/dapper:windows-1903
    environment:
      OAUTH_TOKEN:
        from_secret: github_token
    commands:
      - dapper.exe -f Dockerfile-windows-pandaria.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - push
        - pull_request
        - tag

  - name: stage-binaries
    image: maiwj/dapper:windows-1903
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-1903-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1903
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-dev
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: ${DRONE_BRANCH/release\//}-dev-windows-1903
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-1903-amd64
    settings:
      build_args:
        - SERVERCORE_VERSION=1903
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: docker_password
      repo: cnrancher/rancher-agent
      tag: "${DRONE_TAG}-windows-1903"
      username:
        from_secret: docker_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote
node:
  instance: agent-windows-1903
---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

steps:
  - name: push-head-manifest
    image: plugins/manifest:1.1.0
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: manifest.tmpl.pandaria
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: push-head-agent-manifest
    image: plugins/manifest:1.1.0
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: manifest-agent.tmpl.pandaria
      username:
        from_secret: docker_username
    when:
      branch:
        - release/v2.3-ent
      event:
        - push

  - name: push-manifest
    image: plugins/manifest:1.1.0
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: manifest.tmpl.pandaria
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

  - name: push-agent-manifest
    image: plugins/manifest:1.1.0
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: manifest-agent.tmpl.pandaria
      username:
        from_secret: docker_username
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*saic*"

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  ref:
    exclude:
      - "refs/heads/release/*saic*"
      - "refs/tags/*saic*"
  event:
    exclude:
      - promote

node:
  instance: agent-amd64

depends_on:
  - default-linux-amd64
  - default-linux-arm64
  - default-windows-1903
  - default-windows-1809

...
